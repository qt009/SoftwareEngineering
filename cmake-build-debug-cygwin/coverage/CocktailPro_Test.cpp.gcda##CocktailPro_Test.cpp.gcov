        -:    0:Source:/cygdrive/c/Users/PC/OneDrive - stud.h-da.de/PRAKTIKUM/Software Engineering/CocktailPro/src/test/CocktailPro_Test.cpp
        -:    0:Graph:/cygdrive/c/Users/PC/OneDrive - stud.h-da.de/PRAKTIKUM/Software Engineering/CocktailPro/cmake-build-debug-cygwin/CMakeFiles/CocktailProTest.dir/src/test/CocktailPro_Test.cpp.gcno
        -:    0:Data:/cygdrive/c/Users/PC/OneDrive - stud.h-da.de/PRAKTIKUM/Software Engineering/CocktailPro/cmake-build-debug-cygwin/CMakeFiles/CocktailProTest.dir/src/test/CocktailPro_Test.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <limits.h>
        -:    2:#include <string>
        -:    3:#include "gtest/gtest.h"
        -:    4:
        -:    5:// Using this ugly tweak you make all private elements public!
        -:    6:// But be careful! Some methods are private for good reasons!
        -:    7:// So please use this trick only if you really need it!
        -:    8:#define protected public
        -:    9:#define private public
        -:   10:#include "CocktailPro.h"
        -:   11:#undef protected
        -:   12:#undef private
        -:   13:
        -:   14:#include <sstream>
        -:   15:
        -:   16:class CocktailProTest: public ::testing::Test
        -:   17:{
        -:   18:protected:
        -:   19:    const std::string ZutatenFile = "zutaten.txt";
        -:   20:
        -:   21:    std::basic_streambuf<char>* orig_cout;
        -:   22:    std::stringstream test_cout;
        -:   23:
        -:   24:    CocktailPro* cp;
        -:   25:    Timer* t;
        -:   26:
function _ZN15CocktailProTest5SetUpEv called 9 returned 100% blocks executed 92%
        9:   27:    void SetUp() override
        -:   28:    {
        -:   29:        // Check whether cout works normal - otherwise you will get very strange errors
        -:   30:        // if someone else made a mistake when redirecting cout
        9:   31:        std::cout << "Start of " << "CocktailProTest" << std::endl << std::flush;
        9:   31-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
        -:   32:
        -:   33:        // redirect cout to my test_cout stream for testing
        -:   34:        // and store orig cout for restoring after test (!!!do not forget to restore!!!)
        9:   35:        orig_cout = std::cout.rdbuf(test_cout.rdbuf());
call    0 returned 9
call    1 returned 9
        -:   36:
        9:   37:        cp = new CocktailPro(true);
call    0 returned 9
call    1 returned 9
branch  2 taken 9 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   37-block  0
call    4 never executed
        9:   38:        t = Timer::getInstance();
        9:   38-block  0
call    0 returned 9
        9:   39:        t->setTurbo(1000);
call    0 returned 9
        -:   40:
        9:   41:    }
        -:   42:
function _ZN15CocktailProTest8TearDownEv called 9 returned 100% blocks executed 100%
        9:   43:    virtual void TearDown()
        -:   44:    {
        -:   45:        // Code here will be called immediately after each test
        -:   46:        // (right before the destructor).
        9:   47:        std::cout.rdbuf(orig_cout); // redirect cout back to standard cout
        9:   47-block  0
call    0 returned 9
        9:   48:        delete cp;
branch  0 taken 8 (fallthrough)
branch  1 taken 1
        8:   48-block  0
call    2 returned 8
call    3 returned 8
        9:   49:        cp = nullptr;
        -:   50:        // Check whether cout works normal again - otherwise the next one using cout
        -:   51:        // will get very strange behavior
        9:   52:        std::cout << "End of " << "CocktailProTest" << std::endl << std::flush;
        9:   52-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
        9:   53:    }
        -:   54:};
        -:   55:
        4:   56:TEST_F(CocktailProTest, test_start){
        1:   57:    cp->OperatingMode = cp->NORMAL;
        2:   58:    std::stringstream iss("2 3 0 99 -1");
        1:   59:    std::cin.rdbuf(iss.rdbuf());
        1:   60:    cp->start();
        1:   61:}
------------------
_ZN31CocktailProTest_test_start_TestC1Ev:
function _ZN31CocktailProTest_test_start_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST_F(CocktailProTest, test_start){
        1:   56-block  0
call    0 returned 1
------------------
_ZN31CocktailProTest_test_start_TestD0Ev:
function _ZN31CocktailProTest_test_start_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST_F(CocktailProTest, test_start){
        1:   56-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN31CocktailProTest_test_start_TestD1Ev:
function _ZN31CocktailProTest_test_start_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST_F(CocktailProTest, test_start){
        1:   56-block  0
call    0 returned 1
------------------
_ZN31CocktailProTest_test_start_Test8TestBodyEv:
function _ZN31CocktailProTest_test_start_Test8TestBodyEv called 1 returned 100% blocks executed 60%
        1:   56:TEST_F(CocktailProTest, test_start){
        1:   57:    cp->OperatingMode = cp->NORMAL;
        2:   58:    std::stringstream iss("2 3 0 99 -1");
        1:   58-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   58-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
    $$$$$:   58-block  2
    $$$$$:   58-block  3
        1:   59:    std::cin.rdbuf(iss.rdbuf());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   60:    cp->start();
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61:}
        1:   61-block  0
call    0 returned 1
    $$$$$:   61-block  1
call    1 never executed
------------------
        -:   62:
        4:   63:TEST_F(CocktailProTest, test_constructor_with_params){
        -:   64:
        1:   65:    int argc = 2;
        1:   66:    char** param = new char*[2];
        1:   67:    std::string argv1 = "testing";
        1:   68:    std::string argv2 = "-D";
        1:   69:    param[0] = const_cast<char*>(argv1.c_str());
        1:   70:    param[1] = const_cast<char*>(argv2.c_str());
        -:   71:
        1:   72:    auto * c= new CocktailPro(argc, param);
       1*:   73:    EXPECT_TRUE(c->OperatingMode == c->DEMO);
        -:   74:
        1:   75:}
------------------
_ZN49CocktailProTest_test_constructor_with_params_TestC1Ev:
function _ZN49CocktailProTest_test_constructor_with_params_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST_F(CocktailProTest, test_constructor_with_params){
        1:   63-block  0
call    0 returned 1
------------------
_ZN49CocktailProTest_test_constructor_with_params_TestD0Ev:
function _ZN49CocktailProTest_test_constructor_with_params_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST_F(CocktailProTest, test_constructor_with_params){
        1:   63-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN49CocktailProTest_test_constructor_with_params_TestD1Ev:
function _ZN49CocktailProTest_test_constructor_with_params_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST_F(CocktailProTest, test_constructor_with_params){
        1:   63-block  0
call    0 returned 1
------------------
_ZN49CocktailProTest_test_constructor_with_params_Test8TestBodyEv:
function _ZN49CocktailProTest_test_constructor_with_params_Test8TestBodyEv called 1 returned 100% blocks executed 37%
        1:   63:TEST_F(CocktailProTest, test_constructor_with_params){
        -:   64:
        1:   65:    int argc = 2;
        1:   66:    char** param = new char*[2];
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   67:    std::string argv1 = "testing";
        1:   67-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   67-block  1
        1:   68:    std::string argv2 = "-D";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   68-block  0
        1:   69:    param[0] = const_cast<char*>(argv1.c_str());
call    0 returned 1
        1:   70:    param[1] = const_cast<char*>(argv2.c_str());
call    0 returned 1
        -:   71:
        1:   72:    auto * c= new CocktailPro(argc, param);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   72-block  1
call    6 never executed
       1*:   73:    EXPECT_TRUE(c->OperatingMode == c->DEMO);
        1:   73-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   73-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   73-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:   73-block  3
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:   73-block  4
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   73-block  5
call   17 never executed
call   18 never executed
call   19 never executed
        1:   73-block  6
call   20 returned 1
    $$$$$:   73-block  7
call   21 never executed
    $$$$$:   73-block  8
    $$$$$:   73-block  9
call   22 never executed
    $$$$$:   73-block 10
    $$$$$:   73-block 11
call   23 never executed
    $$$$$:   73-block 12
    $$$$$:   73-block 13
call   24 never executed
        -:   74:
        1:   75:}
call    0 returned 1
call    1 returned 1
    $$$$$:   75-block  0
call    2 never executed
    $$$$$:   75-block  1
call    3 never executed
------------------
        -:   76:
        4:   77:TEST_F(CocktailProTest, test_copyConstructor){
        1:   78:    auto* cpTest = new CocktailPro(*cp);
       1*:   79:    EXPECT_EQ(cpTest->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
        1:   80:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        -:   81:
       1*:   82:    EXPECT_EQ(cpTest->theMischbaresRezeptbuch->getNumberOfRecipes(),
        1:   83:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        -:   84:
       1*:   85:    EXPECT_EQ(cpTest->theDeviceVerwalter->myDevices->size(),
        1:   86:              cp->theDeviceVerwalter->myDevices->size());
        -:   87:
       1*:   88:    EXPECT_EQ(cp->OperatingMode, cpTest->OperatingMode);
        -:   89:
        1:   90:    cp->OperatingMode = cp->NORMAL;
        1:   91:    auto *cpTest2 = new CocktailPro(*cp);
       1*:   92:    EXPECT_EQ(cpTest2->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
        1:   93:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        -:   94:
       1*:   95:    EXPECT_EQ(cpTest2->theMischbaresRezeptbuch->getNumberOfRecipes(),
        1:   96:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        -:   97:
       1*:   98:    EXPECT_EQ(cpTest2->theDeviceVerwalter->myDevices->size(),
        1:   99:              cp->theDeviceVerwalter->myDevices->size());
        -:  100:
       1*:  101:    EXPECT_EQ(cp->OperatingMode, cpTest2->OperatingMode);
        -:  102:
        1:  103:    delete cpTest;
        1:  104:    delete cpTest2;
        1:  105:}
------------------
_ZN41CocktailProTest_test_copyConstructor_TestC1Ev:
function _ZN41CocktailProTest_test_copyConstructor_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   77:TEST_F(CocktailProTest, test_copyConstructor){
        1:   77-block  0
call    0 returned 1
------------------
_ZN41CocktailProTest_test_copyConstructor_TestD0Ev:
function _ZN41CocktailProTest_test_copyConstructor_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   77:TEST_F(CocktailProTest, test_copyConstructor){
        1:   77-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN41CocktailProTest_test_copyConstructor_TestD1Ev:
function _ZN41CocktailProTest_test_copyConstructor_TestD1Ev called 1 returned 100% blocks executed 100%
        1:   77:TEST_F(CocktailProTest, test_copyConstructor){
        1:   77-block  0
call    0 returned 1
------------------
_ZN41CocktailProTest_test_copyConstructor_Test8TestBodyEv:
function _ZN41CocktailProTest_test_copyConstructor_Test8TestBodyEv called 1 returned 100% blocks executed 27%
        1:   77:TEST_F(CocktailProTest, test_copyConstructor){
        1:   78:    auto* cpTest = new CocktailPro(*cp);
        1:   78-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   78-block  1
call    4 never executed
       1*:   79:    EXPECT_EQ(cpTest->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   79-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   79-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   79-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   79-block  5
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   79-block  6
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   79-block  7
call   22 never executed
call   23 never executed
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
call   24 never executed
    $$$$$:   79-block 11
    $$$$$:   79-block 12
call   25 never executed
    $$$$$:   79-block 13
        1:   80:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        1:   80-block  0
call    0 returned 1
    $$$$$:   80-block  1
call    1 never executed
        -:   81:
       1*:   82:    EXPECT_EQ(cpTest->theMischbaresRezeptbuch->getNumberOfRecipes(),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   82-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   82-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   82-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   82-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   82-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   82-block  6
call   22 never executed
call   23 never executed
    $$$$$:   82-block  7
    $$$$$:   82-block  8
    $$$$$:   82-block  9
call   24 never executed
    $$$$$:   82-block 10
    $$$$$:   82-block 11
call   25 never executed
    $$$$$:   82-block 12
        1:   83:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        1:   83-block  0
call    0 returned 1
    $$$$$:   83-block  1
call    1 never executed
        -:   84:
       1*:   85:    EXPECT_EQ(cpTest->theDeviceVerwalter->myDevices->size(),
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   85-block  0
call    5 returned 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   85-block  1
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:   85-block  2
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   85-block  3
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   85-block  4
call   18 never executed
call   19 never executed
    $$$$$:   85-block  5
    $$$$$:   85-block  6
    $$$$$:   85-block  7
call   20 never executed
    $$$$$:   85-block  8
    $$$$$:   85-block  9
call   21 never executed
    $$$$$:   85-block 10
        1:   86:              cp->theDeviceVerwalter->myDevices->size());
        1:   86-block  0
call    0 returned 1
    $$$$$:   86-block  1
call    1 never executed
        -:   87:
       1*:   88:    EXPECT_EQ(cp->OperatingMode, cpTest->OperatingMode);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   88-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   88-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   88-block  2
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:   88-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   88-block  4
call   16 never executed
call   17 never executed
        1:   88-block  5
call   18 returned 1
    $$$$$:   88-block  6
call   19 never executed
    $$$$$:   88-block  7
    $$$$$:   88-block  8
call   20 never executed
    $$$$$:   88-block  9
    $$$$$:   88-block 10
call   21 never executed
        -:   89:
        1:   90:    cp->OperatingMode = cp->NORMAL;
        1:   91:    auto *cpTest2 = new CocktailPro(*cp);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   91-block  0
call    4 never executed
       1*:   92:    EXPECT_EQ(cpTest2->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
        1:   92-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   92-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   92-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   92-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   92-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   92-block  5
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   92-block  6
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   92-block  7
call   22 never executed
call   23 never executed
    $$$$$:   92-block  8
    $$$$$:   92-block  9
    $$$$$:   92-block 10
call   24 never executed
    $$$$$:   92-block 11
    $$$$$:   92-block 12
call   25 never executed
    $$$$$:   92-block 13
        1:   93:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        1:   93-block  0
call    0 returned 1
    $$$$$:   93-block  1
call    1 never executed
        -:   94:
       1*:   95:    EXPECT_EQ(cpTest2->theMischbaresRezeptbuch->getNumberOfRecipes(),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   95-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   95-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   95-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   95-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   95-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   95-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   95-block  6
call   22 never executed
call   23 never executed
    $$$$$:   95-block  7
    $$$$$:   95-block  8
    $$$$$:   95-block  9
call   24 never executed
    $$$$$:   95-block 10
    $$$$$:   95-block 11
call   25 never executed
    $$$$$:   95-block 12
        1:   96:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        1:   96-block  0
call    0 returned 1
    $$$$$:   96-block  1
call    1 never executed
        -:   97:
       1*:   98:    EXPECT_EQ(cpTest2->theDeviceVerwalter->myDevices->size(),
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   98-block  0
call    5 returned 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   98-block  1
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:   98-block  2
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   98-block  3
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   98-block  4
call   18 never executed
call   19 never executed
    $$$$$:   98-block  5
    $$$$$:   98-block  6
    $$$$$:   98-block  7
call   20 never executed
    $$$$$:   98-block  8
    $$$$$:   98-block  9
call   21 never executed
    $$$$$:   98-block 10
        1:   99:              cp->theDeviceVerwalter->myDevices->size());
        1:   99-block  0
call    0 returned 1
    $$$$$:   99-block  1
call    1 never executed
        -:  100:
       1*:  101:    EXPECT_EQ(cp->OperatingMode, cpTest2->OperatingMode);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  101-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  101-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  101-block  2
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  101-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  101-block  4
call   16 never executed
call   17 never executed
        1:  101-block  5
call   18 returned 1
    $$$$$:  101-block  6
call   19 never executed
    $$$$$:  101-block  7
    $$$$$:  101-block  8
call   20 never executed
    $$$$$:  101-block  9
    $$$$$:  101-block 10
call   21 never executed
        -:  102:
        1:  103:    delete cpTest;
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  103-block  0
call    2 returned 1
call    3 returned 1
        1:  104:    delete cpTest2;
        1:  104-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  104-block  1
call    2 returned 1
call    3 returned 1
        1:  105:}
        1:  105-block  0
------------------
        -:  106:
        4:  107:TEST_F(CocktailProTest, test_demo){
        1:  108:    int maxRecipe = cp->theMischbaresRezeptbuch->getNumberOfRecipes();
       12:  109:    for (int i = 0; i<=10; ++i){
      11*:  110:        if(i <= maxRecipe) EXPECT_TRUE(cp->demo(i));
       4*:  111:        else EXPECT_FALSE(cp->demo(i));
        -:  112:    }
        1:  113:}
------------------
_ZN30CocktailProTest_test_demo_TestC1Ev:
function _ZN30CocktailProTest_test_demo_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  107:TEST_F(CocktailProTest, test_demo){
        1:  107-block  0
call    0 returned 1
------------------
_ZN30CocktailProTest_test_demo_TestD0Ev:
function _ZN30CocktailProTest_test_demo_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  107:TEST_F(CocktailProTest, test_demo){
        1:  107-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN30CocktailProTest_test_demo_TestD1Ev:
function _ZN30CocktailProTest_test_demo_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  107:TEST_F(CocktailProTest, test_demo){
        1:  107-block  0
call    0 returned 1
------------------
_ZN30CocktailProTest_test_demo_Test8TestBodyEv:
function _ZN30CocktailProTest_test_demo_Test8TestBodyEv called 1 returned 100% blocks executed 32%
        1:  107:TEST_F(CocktailProTest, test_demo){
        1:  108:    int maxRecipe = cp->theMischbaresRezeptbuch->getNumberOfRecipes();
        1:  108-block  0
call    0 returned 1
       12:  109:    for (int i = 0; i<=10; ++i){
       11:  109-block  0
       12:  109-block  1
branch  0 taken 11
branch  1 taken 1 (fallthrough)
      11*:  110:        if(i <= maxRecipe) EXPECT_TRUE(cp->demo(i));
       11:  110-block  0
branch  0 taken 7 (fallthrough)
branch  1 taken 4
        7:  110-block  1
call    2 returned 7
branch  3 taken 7 (fallthrough)
branch  4 taken 0 (throw)
        7:  110-block  2
call    5 returned 7
call    6 returned 7
branch  7 taken 0 (fallthrough)
branch  8 taken 7
    %%%%%:  110-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  110-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  110-block  5
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  110-block  6
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:  110-block  7
call   22 never executed
call   23 never executed
call   24 never executed
        7:  110-block  8
call   25 returned 7
    $$$$$:  110-block  9
call   26 never executed
    $$$$$:  110-block 10
    $$$$$:  110-block 11
call   27 never executed
    $$$$$:  110-block 12
    $$$$$:  110-block 13
call   28 never executed
    $$$$$:  110-block 14
    $$$$$:  110-block 15
call   29 never executed
       4*:  111:        else EXPECT_FALSE(cp->demo(i));
        4:  111-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:  111-block  1
call    3 returned 4
call    4 returned 4
branch  5 taken 0 (fallthrough)
branch  6 taken 4
    %%%%%:  111-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  111-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  111-block  4
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  111-block  5
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:  111-block  6
call   20 never executed
call   21 never executed
call   22 never executed
        4:  111-block  7
call   23 returned 4
    $$$$$:  111-block  8
call   24 never executed
    $$$$$:  111-block  9
    $$$$$:  111-block 10
call   25 never executed
    $$$$$:  111-block 11
    $$$$$:  111-block 12
call   26 never executed
    $$$$$:  111-block 13
    $$$$$:  111-block 14
call   27 never executed
        -:  112:    }
        1:  113:}
        1:  113-block  0
------------------
        -:  114:
        4:  115:TEST_F(CocktailProTest, test_waehle){
        2:  116:    std::stringstream iss("99 1");
        1:  117:    std::cin.rdbuf(iss.rdbuf());
       1*:  118:    EXPECT_EQ(cp->waehle(),1);
        1:  119:}
------------------
_ZN32CocktailProTest_test_waehle_TestC1Ev:
function _ZN32CocktailProTest_test_waehle_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  115:TEST_F(CocktailProTest, test_waehle){
        1:  115-block  0
call    0 returned 1
------------------
_ZN32CocktailProTest_test_waehle_TestD0Ev:
function _ZN32CocktailProTest_test_waehle_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  115:TEST_F(CocktailProTest, test_waehle){
        1:  115-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN32CocktailProTest_test_waehle_TestD1Ev:
function _ZN32CocktailProTest_test_waehle_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  115:TEST_F(CocktailProTest, test_waehle){
        1:  115-block  0
call    0 returned 1
------------------
_ZN32CocktailProTest_test_waehle_Test8TestBodyEv:
function _ZN32CocktailProTest_test_waehle_Test8TestBodyEv called 1 returned 100% blocks executed 36%
        1:  115:TEST_F(CocktailProTest, test_waehle){
        2:  116:    std::stringstream iss("99 1");
        1:  116-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  116-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
    $$$$$:  116-block  2
    $$$$$:  116-block  3
        1:  117:    std::cin.rdbuf(iss.rdbuf());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  117-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
       1*:  118:    EXPECT_EQ(cp->waehle(),1);
        1:  118-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  118-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  118-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  118-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  118-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  118-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  118-block  6
call   19 never executed
call   20 never executed
        1:  118-block  7
call   21 returned 1
    $$$$$:  118-block  8
    $$$$$:  118-block  9
    $$$$$:  118-block 10
call   22 never executed
    $$$$$:  118-block 11
    $$$$$:  118-block 12
call   23 never executed
    $$$$$:  118-block 13
    $$$$$:  118-block 14
call   24 never executed
        1:  119:}
call    0 returned 1
    $$$$$:  119-block  0
call    1 never executed
------------------
        -:  120:
        4:  121:TEST_F(CocktailProTest, test_isValidNumber){
       1*:  122:    EXPECT_FALSE(cp->isValidNumber(0));
       1*:  123:    EXPECT_TRUE(cp->isValidNumber(-1));
       1*:  124:    EXPECT_FALSE(cp->isValidNumber(4));
        1:  125:}
------------------
_ZN39CocktailProTest_test_isValidNumber_TestC1Ev:
function _ZN39CocktailProTest_test_isValidNumber_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  121:TEST_F(CocktailProTest, test_isValidNumber){
        1:  121-block  0
call    0 returned 1
------------------
_ZN39CocktailProTest_test_isValidNumber_TestD0Ev:
function _ZN39CocktailProTest_test_isValidNumber_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  121:TEST_F(CocktailProTest, test_isValidNumber){
        1:  121-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN39CocktailProTest_test_isValidNumber_TestD1Ev:
function _ZN39CocktailProTest_test_isValidNumber_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  121:TEST_F(CocktailProTest, test_isValidNumber){
        1:  121-block  0
call    0 returned 1
------------------
_ZN39CocktailProTest_test_isValidNumber_Test8TestBodyEv:
function _ZN39CocktailProTest_test_isValidNumber_Test8TestBodyEv called 1 returned 100% blocks executed 22%
        1:  121:TEST_F(CocktailProTest, test_isValidNumber){
       1*:  122:    EXPECT_FALSE(cp->isValidNumber(0));
        1:  122-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  122-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  122-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  122-block  4
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  122-block  5
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:  122-block  6
call   20 never executed
call   21 never executed
call   22 never executed
        1:  122-block  7
call   23 returned 1
    $$$$$:  122-block  8
call   24 never executed
    $$$$$:  122-block  9
    $$$$$:  122-block 10
call   25 never executed
    $$$$$:  122-block 11
    $$$$$:  122-block 12
call   26 never executed
    $$$$$:  122-block 13
    $$$$$:  122-block 14
call   27 never executed
       1*:  123:    EXPECT_TRUE(cp->isValidNumber(-1));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  123-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  123-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  123-block  2
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  123-block  3
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  123-block  4
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:  123-block  5
call   20 never executed
call   21 never executed
call   22 never executed
        1:  123-block  6
call   23 returned 1
    $$$$$:  123-block  7
call   24 never executed
    $$$$$:  123-block  8
    $$$$$:  123-block  9
call   25 never executed
    $$$$$:  123-block 10
    $$$$$:  123-block 11
call   26 never executed
    $$$$$:  123-block 12
    $$$$$:  123-block 13
call   27 never executed
       1*:  124:    EXPECT_FALSE(cp->isValidNumber(4));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  124-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  124-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  124-block  2
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  124-block  3
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  124-block  4
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:  124-block  5
call   20 never executed
call   21 never executed
call   22 never executed
        1:  124-block  6
call   23 returned 1
    $$$$$:  124-block  7
call   24 never executed
    $$$$$:  124-block  8
    $$$$$:  124-block  9
call   25 never executed
    $$$$$:  124-block 10
    $$$$$:  124-block 11
call   26 never executed
    $$$$$:  124-block 12
    $$$$$:  124-block 13
call   27 never executed
        1:  125:}
------------------
        -:  126:
        4:  127:TEST_F(CocktailProTest, testDestructor){
        1:  128:    delete cp;
        1:  129:    cp = nullptr;
        -:  130:
       1*:  131:    EXPECT_TRUE(cp == nullptr);
        1:  132:}
------------------
_ZN35CocktailProTest_testDestructor_TestC1Ev:
function _ZN35CocktailProTest_testDestructor_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST_F(CocktailProTest, testDestructor){
        1:  127-block  0
call    0 returned 1
------------------
_ZN35CocktailProTest_testDestructor_TestD0Ev:
function _ZN35CocktailProTest_testDestructor_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST_F(CocktailProTest, testDestructor){
        1:  127-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN35CocktailProTest_testDestructor_TestD1Ev:
function _ZN35CocktailProTest_testDestructor_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  127:TEST_F(CocktailProTest, testDestructor){
        1:  127-block  0
call    0 returned 1
------------------
_ZN35CocktailProTest_testDestructor_Test8TestBodyEv:
function _ZN35CocktailProTest_testDestructor_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:  127:TEST_F(CocktailProTest, testDestructor){
        1:  128:    delete cp;
        1:  128-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  128-block  1
call    2 returned 1
call    3 returned 1
        1:  129:    cp = nullptr;
        -:  130:
       1*:  131:    EXPECT_TRUE(cp == nullptr);
        1:  131-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  131-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  131-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  131-block  3
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  131-block  4
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  131-block  5
call   17 never executed
call   18 never executed
call   19 never executed
        1:  131-block  6
call   20 returned 1
    $$$$$:  131-block  7
call   21 never executed
    $$$$$:  131-block  8
    $$$$$:  131-block  9
call   22 never executed
    $$$$$:  131-block 10
    $$$$$:  131-block 11
call   23 never executed
    $$$$$:  131-block 12
    $$$$$:  131-block 13
call   24 never executed
        1:  132:}
------------------
        -:  133:
        4:  134:TEST_F(CocktailProTest,testAssignmentOperator){
        1:  135:    auto* cpTest = new CocktailPro(true);
        1:  136:    *cpTest = *cp;
       1*:  137:    EXPECT_EQ(cpTest->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
        1:  138:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        -:  139:
       1*:  140:    EXPECT_EQ(cpTest->theMischbaresRezeptbuch->getNumberOfRecipes(),
        1:  141:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        -:  142:
       1*:  143:    EXPECT_EQ(cpTest->theDeviceVerwalter->myDevices->size(),
        1:  144:              cp->theDeviceVerwalter->myDevices->size());
        -:  145:
       1*:  146:    EXPECT_EQ(cp->OperatingMode, cpTest->OperatingMode);
        -:  147:
        1:  148:}
------------------
_ZN43CocktailProTest_testAssignmentOperator_TestC1Ev:
function _ZN43CocktailProTest_testAssignmentOperator_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST_F(CocktailProTest,testAssignmentOperator){
        1:  134-block  0
call    0 returned 1
------------------
_ZN43CocktailProTest_testAssignmentOperator_TestD0Ev:
function _ZN43CocktailProTest_testAssignmentOperator_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST_F(CocktailProTest,testAssignmentOperator){
        1:  134-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN43CocktailProTest_testAssignmentOperator_TestD1Ev:
function _ZN43CocktailProTest_testAssignmentOperator_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  134:TEST_F(CocktailProTest,testAssignmentOperator){
        1:  134-block  0
call    0 returned 1
------------------
_ZN43CocktailProTest_testAssignmentOperator_Test8TestBodyEv:
function _ZN43CocktailProTest_testAssignmentOperator_Test8TestBodyEv called 1 returned 100% blocks executed 26%
        1:  134:TEST_F(CocktailProTest,testAssignmentOperator){
        1:  135:    auto* cpTest = new CocktailPro(true);
        1:  135-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  135-block  1
call    4 never executed
        1:  136:    *cpTest = *cp;
        1:  136-block  0
call    0 returned 1
       1*:  137:    EXPECT_EQ(cpTest->theZutatenVerwalter->getAnzahlVorhandeneZutaten(),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  137-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  137-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  137-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:  137-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  137-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  137-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:  137-block  6
call   22 never executed
call   23 never executed
    $$$$$:  137-block  7
    $$$$$:  137-block  8
    $$$$$:  137-block  9
call   24 never executed
    $$$$$:  137-block 10
    $$$$$:  137-block 11
call   25 never executed
    $$$$$:  137-block 12
        1:  138:              cp->theZutatenVerwalter->getAnzahlVorhandeneZutaten());
        1:  138-block  0
call    0 returned 1
    $$$$$:  138-block  1
call    1 never executed
        -:  139:
       1*:  140:    EXPECT_EQ(cpTest->theMischbaresRezeptbuch->getNumberOfRecipes(),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  140-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  140-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  140-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:  140-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  140-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  140-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:  140-block  6
call   22 never executed
call   23 never executed
    $$$$$:  140-block  7
    $$$$$:  140-block  8
    $$$$$:  140-block  9
call   24 never executed
    $$$$$:  140-block 10
    $$$$$:  140-block 11
call   25 never executed
    $$$$$:  140-block 12
        1:  141:              cp->theMischbaresRezeptbuch->getNumberOfRecipes());
        1:  141-block  0
call    0 returned 1
    $$$$$:  141-block  1
call    1 never executed
        -:  142:
       1*:  143:    EXPECT_EQ(cpTest->theDeviceVerwalter->myDevices->size(),
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  143-block  0
call    5 returned 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  143-block  1
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  143-block  2
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  143-block  3
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:  143-block  4
call   18 never executed
call   19 never executed
    $$$$$:  143-block  5
    $$$$$:  143-block  6
    $$$$$:  143-block  7
call   20 never executed
    $$$$$:  143-block  8
    $$$$$:  143-block  9
call   21 never executed
    $$$$$:  143-block 10
        1:  144:              cp->theDeviceVerwalter->myDevices->size());
        1:  144-block  0
call    0 returned 1
    $$$$$:  144-block  1
call    1 never executed
        -:  145:
       1*:  146:    EXPECT_EQ(cp->OperatingMode, cpTest->OperatingMode);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  146-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  146-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  146-block  2
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  146-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  146-block  4
call   16 never executed
call   17 never executed
        1:  146-block  5
call   18 returned 1
    $$$$$:  146-block  6
call   19 never executed
    $$$$$:  146-block  7
    $$$$$:  146-block  8
call   20 never executed
    $$$$$:  146-block  9
    $$$$$:  146-block 10
call   21 never executed
        -:  147:
        1:  148:}
------------------
        -:  149:
        4:  150:TEST_F(CocktailProTest, testConstructorWithDemo){
        1:  151:    delete cp;
        1:  152:    cp = nullptr;
        -:  153:
        1:  154:    cp = new CocktailPro(true);
       1*:  155:    EXPECT_TRUE(cp->OperatingMode = cp->DEMO);
        1:  156:}
------------------
_ZN44CocktailProTest_testConstructorWithDemo_TestC1Ev:
function _ZN44CocktailProTest_testConstructorWithDemo_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  150:TEST_F(CocktailProTest, testConstructorWithDemo){
        1:  150-block  0
call    0 returned 1
------------------
_ZN44CocktailProTest_testConstructorWithDemo_TestD0Ev:
function _ZN44CocktailProTest_testConstructorWithDemo_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  150:TEST_F(CocktailProTest, testConstructorWithDemo){
        1:  150-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN44CocktailProTest_testConstructorWithDemo_TestD1Ev:
function _ZN44CocktailProTest_testConstructorWithDemo_TestD1Ev called 1 returned 100% blocks executed 100%
        1:  150:TEST_F(CocktailProTest, testConstructorWithDemo){
        1:  150-block  0
call    0 returned 1
------------------
_ZN44CocktailProTest_testConstructorWithDemo_Test8TestBodyEv:
function _ZN44CocktailProTest_testConstructorWithDemo_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  150:TEST_F(CocktailProTest, testConstructorWithDemo){
        1:  151:    delete cp;
        1:  151-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  151-block  1
call    2 returned 1
call    3 returned 1
        1:  152:    cp = nullptr;
        -:  153:
        1:  154:    cp = new CocktailPro(true);
        1:  154-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  154-block  1
call    4 never executed
       1*:  155:    EXPECT_TRUE(cp->OperatingMode = cp->DEMO);
        1:  155-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  155-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  155-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  155-block  3
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  155-block  4
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  155-block  5
call   17 never executed
call   18 never executed
call   19 never executed
        1:  155-block  6
call   20 returned 1
    $$$$$:  155-block  7
call   21 never executed
    $$$$$:  155-block  8
    $$$$$:  155-block  9
call   22 never executed
    $$$$$:  155-block 10
    $$$$$:  155-block 11
call   23 never executed
    $$$$$:  155-block 12
    $$$$$:  155-block 13
call   24 never executed
        1:  156:}
------------------
